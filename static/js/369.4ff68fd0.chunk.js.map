{"version":3,"file":"static/js/369.4ff68fd0.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: #3bd9d9;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  background-color: transparent;\n  border: 1px solid white;\n  border-radius: 12px;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 20px;\n  border: none;\n  color: #ddd;\n  font-size: 20px;\n  color: black;\n  transition: transform 250ms linear, box-shadow 250ms linear;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3),\n      inset 0px -6px 12px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContactsThunk } from 'redux/contacts/thunk';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  // зміна значень інпутів\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  //відправка форми\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isContactExist = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    // Проверяет, существует ли контакт с таким же именем в списке контактов. Если контакт уже существует, выводится предупреждение.\n    if (isContactExist) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    //виклик з App з передачею нового контакту\n    dispatch(addContactsThunk({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  width: 600px;\n  justify-content: center;\n  flex-direction: column;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  border-bottom: 1px solid #ddd;\n  border-radius: 4px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: none;\n  color: #ddd;\n  font-size: 20px;\n  color: black;\n  transition: transform 250ms linear, box-shadow 250ms linear;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3),\n      inset 0px -6px 12px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/selectors';\nimport { deleteContactsThunk } from 'redux/contacts/thunk';\n\nimport { List, Item, Button } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDelete = contactId => dispatch(deleteContactsThunk(contactId));\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <List>\n          {contacts.map(contact => (\n            <Item key={contact.id}>\n              <p>\n                {contact.name} : <span>{contact.number}</span>\n              </p>\n              <Button type=\"button\" onClick={() => handleDelete(contact.id)}>\n                Delete\n              </Button>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n\n  gap: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  color: #3bd9d9;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  width: 200px;\n  background-color: transparent;\n  border: 1px solid white;\n  border-radius: 12px;\n  color: white;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\nimport { Input, Label } from './Filter.styled';\nimport { useEffect } from 'react';\nimport { getContactsThunk } from 'redux/contacts/thunk';\n\nconst filterInputId = nanoid();\n\nconst Filter = () => {\n  const contacts = useSelector(getContacts); //отримання контактів зі стору через селекттор\n  const dispatchContact = useDispatch();\n\n  useEffect(() => {\n    dispatchContact(getContactsThunk()); //асинхронно отримуємо контакти\n  }, [dispatchContact]);\n\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <Label>\n          Find contacts by name\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Enter contact name\"\n            value={value}\n            onChange={handleChangeFilter}\n            id={filterInputId}\n          />\n        </Label>\n      ) : (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            color: 'white',\n          }}\n        >\n          Your phonebook is empty. Add first contact!\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","import styled, { keyframes } from 'styled-components';\n\nexport const SectionWrap = styled.section`\n  margin: 0 auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  color: white;\n  letter-spacing: 1px;\n`;\n\nexport const Head = styled.h1`\n  margin: 0;\n  padding-top: 32px;\n  padding-bottom: 32px;\n  padding-left: 0px;\n  width: 100%;\n  text-align: center;\n`;\n\nconst animation = keyframes`\n  0% {\n    clip-path: polygon(0% 45%, 15% 44%, 32% 50%, 54% 60%, 70% 61%, 84% 59%, 100% 52%, 100% 100%, 0% 100%);\n  }\n  50% {\n    clip-path: polygon(0% 60%, 16% 65%, 34% 66%, 51% 62%, 67% 50%, 84% 45%, 100% 46%, 100% 100%, 0% 100%);\n  }\n  100% {\n    clip-path: polygon(0% 45%, 15% 44%, 32% 50%, 54% 60%, 70% 61%, 84% 59%, 100% 52%, 100% 100%, 0% 100%);\n  }\n`;\n\nexport const SpanFirst = styled.span`\n  position: absolute;\n  color: transparent;\n  display: inline-block;\n  font-size: 40px;\n  letter-spacing: 4px;\n  transform: translate(-50%, -50%);\n  -webkit-text-stroke: 0.5px #ddd;\n`;\n\nexport const SpanSecond = styled.span`\n  position: absolute;\n  color: aqua;\n  display: inline-block;\n  font-size: 40px;\n  letter-spacing: 4px;\n  transform: translate(-50%, -50%);\n  -webkit-text-stroke: 1px #ddd;\n  animation: ${animation} 3000ms ease-in-out infinite;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrap, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrap>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionWrap>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { Head, SpanFirst, SpanSecond } from 'components/Section/Section.styled';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Section>\n        <Head>\n          <SpanFirst>Phonebook</SpanFirst>\n          <SpanSecond>Phonebook</SpanSecond>\n        </Head>\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","_ref","target","value","_jsxs","onSubmit","event","preventDefault","some","trim","alert","concat","addContactsThunk","autoComplete","children","_jsx","type","onChange","pattern","title","required","disabled","List","Item","_Fragment","length","map","onClick","contactId","id","deleteContactsThunk","filterInputId","nanoid","dispatchContact","useEffect","getContactsThunk","placeholder","normalizedValue","changeFilter","style","display","justifyContent","color","SectionWrap","SectionTitle","Head","animation","keyframes","SpanFirst","_templateObject5","SpanSecond","_templateObject6","Section","ContactsPage","ContactForm","Filter","ContactList"],"sourceRoot":""}